/**
 * MoonSharp offers a `json` module which converts between JSON scripts and Lua tables.
 *
 * A major point is that JSON can represent nulls while tables cannot contain a `nil` value; in order to overcome this, a special value is used to represent nulls read from a JSON and the function `json.isNull(val)` can be used to check for this special value. The same value (generated by `json.null()`) can be used in tables which will be translated to JSON to represent explicit nulls.
 */
declare const json: {
  /** Returns a table with the contents of the specified json string. */
  parse: (jsonString: string) => object;
  /** Returns a json string with the contents of the specified table. */
  serialise: (table: object) => string;
  /** Returns true if the value specified is a null read from a json */
  isNull: (val) => boolean;
  /** Returns a special value which is a representation of a null in a json */
  null: () => null;
};
